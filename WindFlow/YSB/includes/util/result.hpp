/** 
 *  @file    result.hpp
 *  @author  Gabriele Mencagli
 *  @date    14/08/2019
 *  
 *  @brief Structure of a result tuple
 *  
 *  This file defines the structure of the tuples generated by the winAggregate.
 *  The data type tuple_t must be default constructible, with a copy constructor
 *  and copy assignment operator, and it must provide and implement the setInfo() and
 *  getInfo() methods.
 */

#ifndef YSB_RESULT_HPP
#define YSB_RESULT_HPP

#include <windflow.hpp>

using namespace std;

// win_result struct
struct result_t
{
    unsigned long wid; // id
    unsigned long ts; // timestamp
    unsigned long cmp_id; // campaign id
    unsigned long lastUpdate; // MAX(TS)
    unsigned long count; // COUNT(*)

    // constructor
    result_t(): lastUpdate(0), count(0) {}

    // destructor
    ~result_t() {}

    // getControlFields method (needed by the WindFlow library)
    tuple<size_t, uint64_t, uint64_t> getControlFields() const
    {
        return tuple<size_t, uint64_t, uint64_t>((size_t) cmp_id, (uint64_t) wid, (uint64_t) ts); // be careful with this cast!
    }

    // setControlFields method (needed by the WindFlow library)
    void setControlFields(size_t _key, uint64_t _id, uint64_t _ts)
    {
        cmp_id = (long) _key;
        ts = (long) _ts;
        wid = _id;
    }
};

#endif //YSB_RESULT_HPP
