/**
 *  @file    result.hpp
 *  @author  Alessandra Fais
 *  @date    16/05/2019
 *
 *  @brief Structure of a tuple result of the FlatMap
 *
 *  This file defines the structure of the tuples generated by the predictor.
 *  The data type result_t must be default constructible, with a copy constructor
 *  and copy assignment operator, and it must provide and implement the setInfo() and
 *  getInfo() methods.
 */

#ifndef FRAUDDETECTION_RESULT_HPP
#define FRAUDDETECTION_RESULT_HPP

#include <windflow.hpp>

using namespace std;

struct result_t {
    string entity_id;        // identifies the customer
    double_t score;          // indicates the chances of fraudolent activity associated with the transaction sequence
    vector<string> states;           // representation of the transaction sequence
    size_t key;              // key
    uint64_t id;             // id
    uint64_t ts;             // timestamp

    // default constructor
    result_t() : entity_id(""), score(0.0), key(0), id(0), ts(0) {}

    // constructor
    result_t(const string& _entity_id, double_t _score, const vector<string>& _states, size_t _key, uint64_t _id, uint64_t _ts) :
            entity_id(_entity_id), score(_score), states(_states), key(_key), id(_id), ts(_ts) {}

    // getControlFields method
    tuple<size_t, uint64_t, uint64_t> getControlFields() const {
        return tuple<size_t, uint64_t, uint64_t>(key, id, ts);
    }

    // setControlFields method
    void setControlFields(size_t _key, uint64_t _id, uint64_t _ts) {
        key = _key;
        id = _id;
        ts = _ts;
    }

    // destructor
    ~result_t() {}
};

#endif //FRAUDDETECTION_RESULT_HPP
