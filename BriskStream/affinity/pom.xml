<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2016 chronicle.software
  ~
  ~ Licensed under the *Apache License, Version 2.0* (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <groupId>net.openhft</groupId>
        <artifactId>java-parent-pom</artifactId>
        <version>1.1.16</version>
        <relativePath/>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>affinity</artifactId>
    <version>3.1.8-SNAPSHOT</version>
    <packaging>bundle</packaging>

    <name>OpenHFT/Java-Thread-Affinity/affinity</name>
    <description>Java Thread Affinity library</description>

    <properties>
        <native.source.dir>src/main/c</native.source.dir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>net.openhft</groupId>
                <artifactId>third-party-bom</artifactId>
                <type>pom</type>
                <version>3.6.2</version>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
        </dependency>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-platform</artifactId>
        </dependency>
        <dependency>
            <groupId>com.intellij</groupId>
            <artifactId>annotations</artifactId>
        </dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.2</version>
                <configuration>
                    <compilerArgument>-Xlint:deprecation</compilerArgument>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- TODO make git remember that the file should be executable -->
            <!--<plugin>-->
            <!--<artifactId>maven-antrun-plugin</artifactId>-->
            <!--<version>1.8</version>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<id>build-native</id>-->
            <!--<phase>process-classes</phase>-->
            <!--<goals>-->
            <!--<goal>run</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
            <!--<target>-->
            <!--<property name="makefile" value_list="${project.basedir}/${native.source.dir}/Makefile"/>-->
            <!--&lt;!&ndash; make it executable &ndash;&gt;-->
            <!--<chmod file="${makefile}" perm="u+x"/>-->
            <!--</target>-->
            <!--</configuration>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <!-- this execution happens just after compiling the java classes, and builds the native code. -->
                        <id>build-native</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.basedir}/${native.source.dir}/Makefile</executable>
                            <workingDirectory>src/main/c</workingDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-publish-plugin</artifactId>
                <configuration>
                    <checkoutDirectory>${project.build.directory}/scmpublish/javadoc</checkoutDirectory>
                    <checkinComment>Publishing javadoc for ${project.artifactId}:${project.version}
                    </checkinComment>
                    <content>${project.reporting.outputDirectory}</content>
                    <skipDeletedFiles>true</skipDeletedFiles>
                    <pubScmUrl>scm:git:git@github.com:OpenHFT/Java-Thread-Affinity</pubScmUrl>
                    <scmBranch>gh-pages</scmBranch>
                </configuration>
            </plugin>
            <!--
                generate maven dependencies versions file that can be used later
                to install the right bundle in test phase.

                The file is:

                    target/classes/META-INF/maven/dependencies.properties
            -->
            <plugin>
                <groupId>org.apache.servicemix.tooling</groupId>
                <artifactId>depends-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-depends-file</id>
                        <goals>
                            <goal>generate-depends-file</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
                        <Bundle-Name>OpenHFT :: ${project.artifactId}</Bundle-Name>
                        <Bundle-Version>${project.version}</Bundle-Version>
                        <Import-Package>
                            com.sun.jna.platform.*;resolution:=optional,
                            *
                        </Import-Package>
                        <Export-Package>
                            net.openhft.affinity.*;-noimport:=true,
                            net.openhft.ticker.*;-noimport:=true
                        </Export-Package>
                    </instructions>
                </configuration>
                <executions>
                    <!--
                      This execution makes sure that the manifest is available
                      when the tests are executed
                    -->
                    <execution>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- todo remove once next parent pom is adopted -->
    <repositories>
        <repository>
            <id>sonatype-nexus-staging</id>
            <url>https://oss.sonatype.org/content/repositories/staging</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

    <scm>
        <url>scm:git:git@github.com:OpenHFT/Java-Thread-Affinity.git</url>
        <connection>scm:git:git@github.com:OpenHFT/Java-Thread-Affinity.git</connection>
        <developerConnection>scm:git:git@github.com:OpenHFT/Java-Thread-Affinity.git
        </developerConnection>
        <tag>master</tag>
    </scm>

</project>
